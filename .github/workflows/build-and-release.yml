name: 'container: build and release'

on:
  workflow_dispatch:
    inputs:
      ref:
        description: build image from specific ref
        required: false
        default: ""
        type: string
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  GIT_REF: ${{ inputs.ref || github.sha }}
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ inputs.ref || github.sha }}
  IMAGE_FULL_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-and-release:
    runs-on: [ubuntu-latest]

    steps:
      - name: "github: checkout"
        uses: actions/checkout@v5
        with:
          ref: ${{ env.GIT_REF }}
          fetch-depth: 0

      - name: "docker: setup qemu"
        uses: docker/setup-qemu-action@v3

      - name: "docker: setup buildx"
        uses: docker/setup-buildx-action@v3

      - name: "github: registry login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "docker: add metadata"
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_FULL_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMAGE_TAG }}
            type=raw,value=${{ github.ref_type == 'tag' && 'latest' || env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ env.IMAGE_TAG }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=GNU General Public License v2.0

      - name: "docker: build and push"
        id: docker-build
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.docker-meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE_FULL_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_FULL_NAME }}:${{ github.ref_type == 'tag' && 'latest' || env.IMAGE_TAG }}

      - name: "github: create release"
        id: github-release
        if: github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.IMAGE_TAG }}
          tag_name: ${{ env.IMAGE_TAG }}
          body: |
            Container image for `${{ env.IMAGE_NAME }}` published!

            **Image:** `${{ env.IMAGE_FULL_NAME }}`
            **Version:** `${{ env.IMAGE_TAG }}`
            **Digest:** `${{ steps.docker-build.outputs.digest }}`

            You can pull it with:
            ```bash
            podman pull ${{ env.IMAGE_FULL_NAME }}:${{ env.IMAGE_TAG }}
            ```
